#!/usr/bin/env bash

# MKL Required for cuda LAPACK
if [ -d "/opt/intel/lib" ]; then
  export LD_LIBRARY_PATH="/opt/intel/lib:$LD_LIBRARY_PATH"
  source /opt/intel/compilers_and_libraries/linux/bin/compilervars.sh intel64
fi


if [ -d "/usr/local/cuda" ]; then
  export CUDADIR="/usr/local/cuda"  # custom path

elif [ -d "/usr/lib/cuda" ]; then
  export CUDADIR="/usr/lib/cuda"    # system76 path

else
  export CUDADIR=""                 # don't do anything with cuda
fi

if [ -n "$CUDADIR" ] && [ -z "$CUDADIRS_SET" ]; then
  safe_path_add "$CUDADIR/bin"
  ################################################################################
  # NNPack Variables
  ################################################################################
  #export CUDADIR=${CUDADIR}
  #export ATLASDIR=/usr/lib/x86_64-linux-gnu/atlas
  ## export ATLASDIR=/usr/include/x86_64-linux-gnu/atlas
  #export LAPACKDIR=/usr/lib/x86_64-linux-gnu/lapack
  ################################################################################

  ################################################################################
  # Custom installed CUDA in /usr/local/
  ################################################################################

  if [ -d "${CUDADIR}/lib64" ]; then
    # for cuda libraries
    export LD_LIBRARY_PATH="${CUDADIR}/lib64:$LD_LIBRARY_PATH"
  fi

  if [ -d "${CUDADIR}/extras/CUPTI/lib64" ]; then
    # for cuda profiling tools
    export LD_LIBRARY_PATH="${CUDADIR}/extras/CUPTI/lib64:$LD_LIBRARY_PATH"
  fi

  if [ -d "/usr/local/magma/lib" ]; then
    # for cuda LAPACK
    export LD_LIBRARY_PATH="/usr/local/magma/lib:$LD_LIBRARY_PATH"
  fi

  function GPULogoOff {
    local GPU_NUM="$1"
    GPU_BRIGHTNESS="$(nvidia-settings --query [gpu:$GPU_NUM]/GPULogoBrightness --terse 2>/dev/null)"
    if $GPU_LIGHTS_OFF && [ "$GPU_BRIGHTNESS" != "0" ] && [ "$GPU_BRIGHTNESS" != "" ]; then
      nvidia-settings --assign [gpu:$GPU_NUM]/GPULogoBrightness=0 1> /dev/null
    fi
  }

  function nvidia-pids {
    nvidia-smi --query-compute-apps=pid --format=csv | grep -v pid | sort | uniq
  }

  function nvidia-killall {
    for pid in $(nvidia-pids); do
      kill -15 $pid
    done
  }

  export -f nvidia-pids
  export -f nvidia-killall

  if command -v nvidia-settings &> /dev/null && [ -z "$GPU_LIGHTS_ON" ]; then
    GPULogoOff 0
    GPULogoOff 1
    GPULogoOff 2
    GPULogoOff 3
    GPU_LIGHTS_ON=false
  fi

  export CUDADIRS_SET="true"
fi
