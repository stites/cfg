#!/usr/bin/env bash

# ========================= #
# Load "run-once" settings  #
# ========================= #

# File may not exist, so don't follow for shellcheck linting (SC1090).
# shellcheck source=/dev/null
[[ ! -f ~/.bash/functions  ]] || source ~/.bash/functions

eval "$(fasd --init auto)"

# ========================================================= #
# setup environments                                        #
# ========================================================= #
safe_source ~/.bash/colors

# match on all symlinks in ~/.bash
#          | \          remove anything with colors, prompt or load in the file name
#          |  `--------.                       |        `-.        `-------.__                finally, execute safe_source
#          |            `--.                   |           `-.                `--.                            |          .-,--- but make sure to inject the file correctly
#          v               |                   |             |                   |                            |         /  |
#find ~/.bash -type l \( -iname "*" ! -iname "colors" ! -iname "prompt" ! -iname "load" \) -exec bash -c 'safe_source "$0"' {} \;
# FIXME: this doesn't alter the current shell

# vvvv    we want to ignore SC2044 because we need to execute safe_source in the current shell (ie: i can't get the above line to work)
# shellcheck disable=SC2044
for SETTING in $(find ~/.bash -type l \( -iname "*" ! -iname "colors" ! -iname "prompt" ! -iname "load" \)); do
  safe_source "$SETTING"
done

safe_source ~/.bash/prompt_variables   # must be declared before the prompt function
safe_source ~/.bash/prompt             # must be last

# ========================================================= #
# PATH Exports                                              #
# ========================================================= #
safe_path_add /bin
safe_path_add /sbin
safe_path_add /usr/bin
safe_path_add /usr/sbin
safe_path_add /usr/local/bin
safe_path_add /usr/local/sbin

